#@+leo-ver=4-thin
#@+node:edream.120603093808:@thin pluginsManager.txt
#@@comment #
#@@tabwidth -4

# Leo enables only those plugins whose filenames appear here.
# Leo loads plugins in the order they appear in this file.
# File names may be indented as desired.

#@+others
#@+node:ekr.20040722122459.4:Commands &  directives
# Allows plugins to add their own directives.
    add_directives.py 
    
# Automatically executes Save commands every so often.
    # mod_autosave.py
    
# Timestamp all save operations to show when they occur.
    # mod_timestamp.py
#@nonl
#@-node:ekr.20040722122459.4:Commands &  directives
#@+node:ekr.20040722122459:Debugging & testing
# Traces all keystrokes.
    # trace_keys.py
    
# A plugin to test Leo's shutdown logic.
    # quit_leo.py
#@nonl
#@-node:ekr.20040722122459:Debugging & testing
#@+node:ekr.20040722122459.3:Enhance the body pane
# Rebind up/down arrow keys
    # arrows.py

# Handles autocompletion when the user types '.' or '(' characters.
    # FIXME: Thread doesn't shut down properly.  Causes unit tests to fail.
    # autocompleter.py
    
# Allows coloring of wiki-style markup.
    # NOTE: requires add_directives.py plugin.
    color_markup.py

# Allows images within body panes.
    image.py

# newButtons.py
    
# Allows right clicks in the body pane.
    rClick.py
#@nonl
#@-node:ekr.20040722122459.3:Enhance the body pane
#@+node:ekr.20040722122459.2:Enhance the icon or status areas
# Creates Hoist and De-Hoist buttons.
    hoist.py

# Adds "run Script" and "scriptButton" buttons to the icon area.
    # Highly recommended for all Python programmers.
    mod_scripting.py
    
# Automatically add nodes for common tasks.
    # newButtons.py

# Creates "Recent" and "Marks" popups in the icon area.
    nodenavigator.py
    
# Creates a search box and a "go" button in the icon area.
    searchbox.py

# Creates row-column indicators in the status area.
    # rowcol.py
#@nonl
#@-node:ekr.20040722122459.2:Enhance the icon or status areas
#@+node:ekr.20040722121404:Experimental plugins
# PRE_ALPHA QUALITY: MAY BE DANGEROUS
    # __wx_gui.py
    
# The original inspirations for mod_scripting.py 
    # dyna_menu.py
    
# """Add and edit unknown attributes of a node
    # editAttributes.py
    
# New from Bernhard Mulder
    # mod_http.py
    
# schedule commands for later execution."""
    # scheduler.py
    
# An plugin to create an Emacs-like status line.
    # Not ready yet: probably interferes with auto-completion
    # status_line.py
    
# New from Paul Paterson.
    # I'm not sure what the status of this is.
    # wordcompleter.py
#@nonl
#@-node:ekr.20040722121404:Experimental plugins
#@+node:ekr.20040722134535.1:External editors & Open With
# Opens a windows shell.
    # open_shell.py

# Creates the Open With menu.
    open_with.py
    
# Launches (starts) a file with the name of the headline on double-clicking it.
    # startfile.py
    
# vim handler.
    # vim.py
    
# Allows you to export text to Word using the Plugins:Word Export:Export menu item.
    # word_export.py
#@nonl
#@-node:ekr.20040722134535.1:External editors & Open With
#@+node:ekr.20040722140105:Files
# Replaces Commands.openWithTempFilePath so Leo opens temporary files with a
# filename that begins with the headline text, and located in a "username_Leo"
# subdirectory of the temporary directory. The "LeoTemp" prefix is omitted. This
# makes it easier to see which temporary file is related to which outline node.
    # mod_tempfname.py
#@nonl
#@-node:ekr.20040722140105:Files
#@+node:ekr.20040722135618:Menus
# Traduit les menus en Fran√ßais.
    # french_fm.py

# Creates the plugins menu.
    plugins_menu.py
    
# Creates a scripts menu.
    # scripts_menu.py
#@nonl
#@-node:ekr.20040722135618:Menus
#@+node:ekr.20040722140829:New kinds of nodes
# The predecessor to rst2.py
    # rst.py

# A plugin to create output files from restructured text.
    # Double-click @rst nodes to process the restructured text.
    # ** requires docutils: http://docutils.sourceforge.net/
    # ** Will use SilverCity syntax styline if present: http://silvercity.sourceforge.net/
    # See also, rst3.py
    rst2.py
#@nonl
#@-node:ekr.20040722140829:New kinds of nodes
#@+node:ekr.20040722121404.1:Other plugins
# Adds #line directives in perl and perlpod programs.
    # lineNumbers.py
    
#
    # niceNosent.py

#
    # scheduler.py
    
#
    # fastgotonode.py
#@nonl
#@-node:ekr.20040722121404.1:Other plugins
#@+node:ekr.20040810065413:Spell checking
# Both these plugins check spelling.
    # Both share the same code base.
    # Both use mod_spelling.ini and mod_spelling.txt.

# Older, slower, can be used with all versions of Python.
    # It's unclear whether this works with Leo 4.2
    # mod_spelling.py
    
# Newer, faster.  Requires aspell.pyd configured for Python and aspell.
# Present version of aspell.py works only with Python 2.3.
    # spellpyx.py
#@nonl
#@-node:ekr.20040810065413:Spell checking
#@-others
#@nonl
#@-node:edream.120603093808:@thin pluginsManager.txt
#@-leo
