<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet ekr_stylesheet?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="121" clone_windows="0"/>
<globals body_outline_ratio="0.5">
	<global_window_position top="17" left="279" height="873" width="915"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20041119035137"><vh>About this file</vh>
<v t="ekr.20041122163623"><vh>Note about canonicalized names</vh></v>
<v t="ekr.20041119035704"><vh> Basic setting nodes: @type-name setting-name = value</vh>
<v t="ekr.20041119042929"><vh>@bool</vh></v>
<v t="ekr.20041119042929.1"><vh>@color</vh></v>
<v t="ekr.20041119044139"><vh>@directory</vh></v>
<v t="ekr.20041119042929.3"><vh>@encoding</vh></v>
<v t="ekr.20041119042929.4"><vh>@int</vh></v>
<v t="ekr.20041119042929.5"><vh>@font</vh></v>
<v t="ekr.20041120181045"><vh>@ratio</vh></v>
<v t="ekr.20041119042929.6"><vh>@shortcut</vh></v>
<v t="ekr.20041120155431.1"><vh>@shortcuts</vh></v>
<v t="ekr.20041119042929.2"><vh>@path</vh></v>
<v t="ekr.20041119042929.7"><vh>@string</vh></v>
</v>
<v t="ekr.20041119035704.1"><vh> Organizer nodes</vh></v>
<v t="ekr.20041119035931"><vh>@if expression</vh></v>
<v t="ekr.20041120175840"><vh>@ifgui gui-name</vh></v>
<v t="ekr.20041119110141"><vh>@ifplatform platform-name</vh></v>
<v t="ekr.20041119035704.2"><vh>@ignore comment</vh></v>
<v t="ekr.20041119035931.1"><vh>@page comment</vh></v>
<v t="ekr.20041119105509"><vh>@set name = value</vh></v>
<v t="ekr.20041119035704.3"><vh>@type type-name: base-type = [list of valid values]</vh></v>
<v t="ekr.20041120155431.2"><vh>@type type-name: script: script-name</vh></v>
</v>
<v t="ekr.20051010093913"><vh>@button Save</vh></v>
<v t="ekr.20051011123608"><vh>@@button align to col</vh></v>
<v t="ekr.20041119034357.1" a="E"><vh>@settings</vh>
<v t="ekr.20041119034357.10"><vh>@page Command options</vh>
<v t="ekr.20041119034357.14"><vh>@bool at_root_bodies_start_in_doc_mode = True</vh></v>
<v t="ekr.20041119041019"><vh>@bool redirect_execute_script_output_to_log_pane = False</vh></v>
<v t="ekr.20041119041019.1"><vh>@string remove_sentinels_extension = .txt</vh></v>
<v t="ekr.20041119041019.2"><vh>@bool save_clears_undo_buffer = False</vh></v>
<v t="ekr.20041119050749.10"><vh>@string headline_time_format_string = %m/%d</vh></v>
<v t="ekr.20041119050749.11"><vh>@string headline_gmt_time = None</vh></v>
<v t="ekr.20050126083026"><vh>@string undo_granularity = None</vh></v>
<v t="ekr.20051027175030"><vh>@bool autocomplete-brackets = False</vh></v>
</v>
<v t="ekr.20041119034357.16"><vh>@page Compare panel options</vh>
<v t="ekr.20041119034357.17"><vh>files &amp; directories</vh>
<v t="ekr.20041119043902"><vh>@string compare_file_1 = None</vh></v>
<v t="ekr.20041119043902.1"><vh>@string compare_file_2 = None</vh></v>
<v t="ekr.20041119043902.2"><vh>@string output_file = None</vh></v>
<v t="ekr.20041119043902.3"><vh>@bool append_output_to_output_file = False</vh></v>
<v t="ekr.20041119034357.18"><vh>@string limit_directory_search_extension = .py</vh></v>
</v>
<v t="ekr.20041119034357.19"><vh>file compare options</vh>
<v t="ekr.20041119043902.4"><vh>@bool ignore_blank_lines = True</vh></v>
<v t="ekr.20041119043902.5"><vh>@bool ignore_first_line_of_file_1 = False</vh></v>
<v t="ekr.20041119043902.6"><vh>@bool ignore_first_line_of_file_2 = False</vh></v>
<v t="ekr.20041119043902.7"><vh>@bool ignore_interior_whitespace = False</vh></v>
<v t="ekr.20041119043902.8"><vh>@bool ignore_leading_whitespace = False</vh></v>
<v t="ekr.20041119043902.9"><vh>@bool ignore_sentinel_lines = False</vh></v>
</v>
<v t="ekr.20041119050105"><vh>output options</vh>
<v t="ekr.20041119043902.10"><vh>@int limit_count = 9</vh></v>
<v t="ekr.20041119043902.11"><vh>@bool make_whitespace_visible = False</vh></v>
<v t="ekr.20041119043902.12"><vh>@bool print_both_lines_for_matches = False</vh></v>
<v t="ekr.20041119043902.13"><vh>@bool print_matching_lines = False</vh></v>
<v t="ekr.20041119043902.14"><vh>@bool print_mismatching_lines = True</vh></v>
<v t="ekr.20041119043902.15"><vh>@bool print_trailing_lines = True</vh></v>
</v>
</v>
<v t="ekr.20051126062243"><vh>@page Debugging options</vh>
<v t="ekr.20051126062243.1"><vh>@bool trace_redraw_now = False</vh></v>
<v t="ekr.20051126062525"><vh>@bool trace_masterCommand = False</vh></v>
<v t="ekr.20051126062830"><vh>@bool trace_g.app.gui.set_focus = False</vh></v>
<v t="ekr.20051126063209"><vh>@int default_callers_level = 7</vh></v>
</v>
<v t="ekr.20041119034357.20"><vh>@page Find/Change panel options</vh>
<v t="ekr.20041119050105.1"><vh>@string change_text = None</vh></v>
<v t="ekr.20041119050105.2"><vh>@string find_text = None</vh></v>
<v t="ekr.20041119050105.3"><vh>Checkboxes</vh>
<v t="ekr.20041119050105.4"><vh>@bool batch = False</vh></v>
<v t="ekr.20041119050105.5"><vh>@bool ignore_case = False</vh></v>
<v t="ekr.20041119050105.6"><vh>@bool mark_changes = False</vh></v>
<v t="ekr.20041119050105.7"><vh>@bool mark_finds = False</vh></v>
<v t="ekr.20041119050105.12"><vh>@bool node_only = False</vh></v>
<v t="ekr.20041119050105.9"><vh>@bool reverse = False</vh></v>
<v t="ekr.20041120152657"><vh>@bool script_change = None</vh></v>
<v t="ekr.20041119050105.14"><vh>@bool search_body = True</vh></v>
<v t="ekr.20041119050105.15"><vh>@bool search_headline = False</vh></v>
<v t="ekr.20041119050105.10"><vh>@bool whole_word = True</vh></v>
<v t="ekr.20041119050105.11"><vh>@bool wrap = False</vh></v>
</v>
<v t="ekr.20041119050105.13"><vh>search extent radio buttons</vh>
<v t="ekr.20041120152900"><vh>@bool selection_only = False</vh></v>
<v t="ekr.20041119050105.16"><vh>@bool suboutline_only = False</vh></v>
</v>
<v t="ekr.20041120152900.1"><vh>search kind radio buttons</vh>
<v t="ekr.20041119050105.8"><vh>@bool pattern_match = False</vh></v>
<v t="ekr.20041120152900.2"><vh>@bool script_search = None</vh></v>
</v>
</v>
<v t="ekr.20041213105007"><vh>@page Fonts</vh>
<v t="ekr.20041213105508"><vh>@font log font</vh></v>
<v t="ekr.20041119034357.45"><vh>@font body text font</vh></v>
<v t="ekr.20041119051246.4"><vh>@font outline font</vh></v>
</v>
<v t="ekr.20050203090810"><vh>@page For unit tests</vh>
<v t="ekr.20050203085250"><vh>@int global_setting_for_unit_tests = 132</vh></v>
</v>
<v t="ekr.20041119034357.3"><vh>@page General configuration options</vh>
<v t="ekr.20041119034357.5"><vh>@bool read_only = False</vh></v>
<v t="ekr.20041119034357.13"><vh>@bool use_plugins = True</vh></v>
<v t="ekr.20041119034357.7"><vh>.leo file options</vh>
<v t="ekr.20041119034357.8"><vh>@string output_initial_comment = None</vh></v>
<v t="ekr.20041119034357.9"><vh>@string stylesheet = None</vh></v>
</v>
<v t="ekr.20041119034357.11"><vh>directory options</vh>
<v t="ekr.20041119041304"><vh>@bool create_nonexistent_directories = False</vh></v>
<v t="ekr.20041119041304.1"><vh>@string relative_path_base_directory = .</vh></v>
</v>
<v t="ekr.20041119034357.12"><vh>derived files options</vh>
<v t="ekr.20041119041747"><vh>@string output_newline = nl</vh></v>
<v t="ekr.20041119041747.1"><vh>@string trailing_body_newlines = one</vh></v>
<v t="ekr.20041119041747.4"><vh>@bool write_strips_blank_lines = True</vh></v>
</v>
<v t="ekr.20041119034357.15"><vh>unicode encoding options</vh>
<v t="ekr.20041119042929.9"><vh>@string default_derived_file_encoding = UTF-8</vh></v>
<v t="ekr.20041119042929.10"><vh>@string new_leo_file_encoding = UTF-8</vh></v>
<v t="ekr.20041119042929.11"><vh>@string tk_encoding = None</vh></v>
</v>
</v>
<v t="ekr.20051123100536"><vh>@page Plugins settings</vh>
<v t="ekr.20051123100536.1"><vh>vim plugin</vh>
<v t="ekr.20051123100536.2"><vh>@string vim_cmd = c:\Program Files\vim\vim63\gvim --servername LEO</vh></v>
<v t="ekr.20051123100536.3"><vh>@string vim_exe = c:\Program Files\vim\vim63\gvim</vh></v>
</v>
</v>
<v t="ekr.20041119034357.28"><vh>@page Preferences panel options</vh>
<v t="ekr.20041119034357.29"><vh>@directory default_tangle_directory = None</vh></v>
<v t="ekr.20041119034357.30"><vh>@language default_target_language = python</vh></v>
<v t="ekr.20050620083647"><vh>@language target_language = python</vh></v>
<v t="ekr.20041119034357.31"><vh>@int tab_width = -4</vh></v>
<v t="ekr.20041119034357.32"><vh>@int page_width = 80</vh></v>
<v t="ekr.20041119034357.33"><vh>@bool output_doc_chunks = True</vh></v>
<v t="ekr.20041119034357.34"><vh>@bool tangle_outputs_header = True</vh></v>
<v t="ekr.20041119034357.35"><vh>@bool run_tangle_done.py = False</vh></v>
<v t="ekr.20041119034357.36"><vh>@bool run_untangle_done.py = False</vh></v>
</v>
<v t="ekr.20051025084017"><vh>@page Spell tab</vh>
<v t="ekr.20051025084017.1"><vh>@string aspell_local_language_code = en</vh></v>
<v t="ekr.20051025084017.2"><vh>@string aspell_local_dictionary = None</vh></v>
<v t="ekr.20051025085144"><vh>@string aspell_dir = c:\aspell</vh></v>
<v t="ekr.20051025085144.1"><vh>@string aspell_bin_dir = c:\aspell\bin</vh></v>
</v>
<v t="ekr.20041213105007.1"><vh>Colors</vh>
<v t="ekr.20041213105007.3"><vh>@page Log pane colors</vh>
<v t="ekr.20041119052015"><vh>@color log_error_color = red</vh></v>
<v t="ekr.20041119052015.2"><vh>@color log_text_foreground_color = None</vh></v>
<v t="ekr.20041119053445"><vh>@color log_text_background_color = None</vh></v>
<v t="ekr.20041217184352.2"><vh>@color log_pane_background_color = #f2fdff</vh></v>
<v t="ekr.20051020125928"><vh>@color log_pane_Find_tab_background_color = #d6c7d3</vh></v>
<v t="ekr.20051025070845"><vh>@color log_pane_Spell_tab_background_color = MistyRose1</vh></v>
</v>
<v t="ekr.20041213105007.2"><vh>@page Body pane colors</vh>
<v t="ekr.20041119034357.41"><vh>@color body_cursor_background_color = None</vh></v>
<v t="ekr.20041119034357.40"><vh>@color body_cursor_foreground_color = None</vh></v>
<v t="ekr.20041119034357.50"><vh>@color body_insertion_cursor_color = None</vh></v>
<v t="ekr.20041119034357.49"><vh>@color body_text_background_color = None</vh></v>
<v t="ekr.20041119034357.48"><vh>@color body_text_foreground_color = None</vh></v>
<v t="ekr.20051006200015"><vh>@color body_text_selection_background_color = Gray80</vh></v>
<v t="ekr.20051006200015.1"><vh>@color body_text_selection_foreground_color = white</vh></v>
</v>
<v t="ekr.20041119051246.1"><vh>@page Outline pane colors</vh>
<v t="ekr.20041119051246.2"><vh>@color headline_text_unselected_background_color = #ffffec</vh></v>
<v t="ekr.20041119050749.6"><vh>@color headline_text_unselected_foreground_color = None</vh></v>
<v t="ekr.20041119051246.3"><vh>@color headline_text_selected_background_color = #dbdbdb</vh></v>
<v t="ekr.20041119050749.7"><vh>@color headline_text_selected_foreground_color = None</vh></v>
<v t="ekr.20041119051901"><vh>@color headline_text_editing_background_color = None</vh></v>
<v t="ekr.20041119050749.8"><vh>@color headline_text_editing_foreground_color = None</vh></v>
<v t="ekr.20041119050749.9"><vh>@color headline_text_editing_selection_foreground_color = None</vh></v>
<v t="ekr.20041119051901.1"><vh>@color headline_text_editing_selection_background_color = None</vh></v>
<v t="ekr.20041119050749.12"><vh>@color outline_pane_background_color = #ffffec</vh></v>
</v>
<v t="ekr.20041119034357.70"><vh>@page Syntax colors &amp; options</vh>
<v t="ekr.20041119034357.78"><vh>@color comment_color = firebrick3</vh></v>
<v t="ekr.20041119034357.79"><vh>@color cweb_section_name_color = red</vh></v>
<v t="ekr.20041119034357.80"><vh>@color directive_color = blue</vh></v>
<v t="ekr.20041119034357.81"><vh>@color doc_part_color = firebrick3</vh></v>
<v t="ekr.20041119034357.82"><vh>@color keyword_color = blue</vh></v>
<v t="ekr.20041120152508"><vh>@color latex_background_color = None</vh></v>
<v t="ekr.20041119034357.83"><vh>@color leo_keyword_color = #00aa00</vh></v>
<v t="ekr.20041119034357.84"><vh>@color section_name_color = red</vh></v>
<v t="ekr.20041119034357.85"><vh>@color section_name_brackets_color = blue</vh></v>
<v t="ekr.20041119034357.86"><vh>@color show_invisibles_space_background_color = Gray90</vh></v>
<v t="ekr.20041119034357.87"><vh>@color show_invisibles_tab_foreground_color = Gray80</vh></v>
<v t="ekr.20041119034357.88"><vh>@color string_color = #00aa00</vh></v>
<v t="ekr.20041119034357.89"><vh>@color undefined_section_name_color = red</vh></v>
<v t="ekr.20041119034357.72"><vh>@bool color_cweb_doc_parts_with_latex = True</vh></v>
<v t="ekr.20041119034357.73"><vh>@bool color_cweb_comments_with_latex = True</vh></v>
<v t="ekr.20041119034357.74"><vh>@bool color_directives_in_plain_text = True</vh></v>
<v t="ekr.20041119034357.75"><vh>@bool underline_undefined_section_names = True</vh></v>
<v t="ekr.20041119034357.76"><vh>@bool use_hyperlinks = False</vh></v>
</v>
<v t="ekr.20041119034357.67"><vh>@color split_bar_color = LightSteelBlue2</vh></v>
</v>
<v t="ekr.20041213105954"><vh>Window options</vh>
<v t="ekr.20041119034357.38"><vh>@page Body pane options</vh>
<v t="ekr.20041119034357.39"><vh>@bool body_pane_wraps = True</vh></v>
<v t="ekr.20041119034357.42"><vh>@string body_time_format_string = %m/%d/%Y %H:%M:%S</vh></v>
<v t="ekr.20041119034357.43"><vh>@bool body_gmt_time = False</vh></v>
<v t="ekr.20041119034357.44"><vh>@bool smart_auto_indent = False</vh></v>
<v t="ekr.20041119034357.53"><vh>@int additional_body_text_border = 0</vh></v>
</v>
<v t="ekr.20041213105954.1"><vh>@page Log pane options</vh>
<v t="ekr.20041119052015.1"><vh>@bool log_pane_wraps = False</vh></v>
</v>
<v t="ekr.20041119034357.56"><vh>@page Options for new windows</vh>
<v t="ekr.20041119034357.59"><vh>@strings[vertical,horizontal] initial_splitter_orientation = vertical</vh></v>
<v t="ekr.20041119034357.57"><vh>@ratio initial_horizontal_ratio = 0.4</vh></v>
<v t="ekr.20041119034357.58"><vh>@ratio initial_horizontal_secondary_ratio = 0.8</vh></v>
<v t="ekr.20041119034357.60"><vh>@ratio initial_vertical_ratio = 0.5</vh></v>
<v t="ekr.20041119034357.61"><vh>@ratio initial_vertical_secondary_ratio = 0.7</vh></v>
<v t="ekr.20041119034357.62"><vh>@int initial_window_height = 600</vh></v>
<v t="ekr.20041119034357.63"><vh>@int initial_window_left = 20</vh></v>
<v t="ekr.20041119034357.64"><vh>@int initial_window_top = 20</vh></v>
<v t="ekr.20041119034357.65"><vh>@int initial_window_width = 800</vh></v>
</v>
<v t="ekr.20041119034357.54"><vh>@page Outline pane options</vh>
<v t="ekr.20041119050749.3"><vh>@bool allow_clone_drags = False</vh></v>
<v t="ekr.20041119050749.4"><vh>@bool enable_drag_messages = False</vh></v>
<v t="ekr.20041119050749.5"><vh>@bool expanded_click_area = True</vh></v>
<v t="ekr.20041119050749.17"><vh>@bool look_for_control_drag_on_mouse_down = True</vh></v>
<v t="ekr.20041119050749.18"><vh>@bool outline_pane_scrolls_horizontally = False</vh></v>
<v t="ekr.20051022154824"><vh>@bool stayInTreeAfterSelect = True</vh></v>
</v>
<v t="ekr.20041213105954.2"><vh>@page Splitter options</vh>
<v t="ekr.20041119034357.68"><vh>@string split_bar_relief = groove</vh></v>
<v t="ekr.20041119034357.69"><vh>@int split_bar_width = 6</vh></v>
</v>
</v>
<v t="ekr.20051007200824" a="E"><vh>Keyboard shortcuts</vh>
<v t="ekr.20051101160257"><vh>About keyboard shortcuts</vh></v>
<v t="ekr.20051007200824.1"><vh>About shortcut specifiers</vh>
<v t="ekr.20051010112903"><vh>Reserved unused, etc.</vh></v>
</v>
<v t="ekr.20050921105316.2"><vh>@bool useMinibuffer = True</vh></v>
<v t="ekr.20050921105316.1"><vh>@bool useCmdMenu=False</vh></v>
<v t="ekr.20051007193321"><vh>@@shortcuts default Emacs shortcuts with all Leo commands</vh></v>
<v t="ekr.20051010112558" a="TV"><vh>@shortcuts traditional Leo shortcuts with important emacs bindings</vh></v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="ekr.20041119034357.1">@nocolor</t>
<t tx="ekr.20041119034357.3"></t>
<t tx="ekr.20041119034357.5">False: Leo writes leoSettings.leo files.</t>
<t tx="ekr.20041119034357.7"></t>
<t tx="ekr.20041119034357.8">Example:

"Created by Leo at @date"

A comment to be iserted in derived files just after the initial @+leo line.
The comment will appear in an @comment sentinel.
Notes:
1. Leo replaces @date with the date and time that the derived file was created.
2. Use \n to separate lines.
3. This must be empty for compatibility with older versions of Leo.
4. Please use an empty comment when updating to CVS!</t>
<t tx="ekr.20041119034357.9">A string, s.  If present, .leo files will contain an xml-stylesheet line following
the opening xml line. 
For example:
  &lt;?xml ....?&gt; 
  &lt;?xml-stylesheet s?&gt;
Note 1: The string s should contain any needed XML escapes.
      Leo simply copies this line as given.
Note 2: Please set this field empty when uploading to CVS.
Note 3: This field must be empty for compatibility with older versions of Leo.</t>
<t tx="ekr.20041119034357.10"></t>
<t tx="ekr.20041119034357.11"></t>
<t tx="ekr.20041119034357.12"></t>
<t tx="ekr.20041119034357.13">True: Leo loads plugins on startup.

Warnings:

- This is a global option ONLY. It can only be set in the leoSettings.leo files
that Leo reads during startup. Changing this option in other Leo files will have
NO effect.

- When this option is enabled, plugins could potentially execute HOSTILE CODE
contained in Leo files. See further warnings in LeoDocs.leo.</t>
<t tx="ekr.20041119034357.14">This option affects how Leo treats body text in @root trees.

True:    Body text in @root trees start in doc mode.

This is the way @root trees always worked prior to version 3.10.

False:    Body text in @root trees start in code mode.

This way makes @root trees more compatible with @file trees.</t>
<t tx="ekr.20041119034357.15"></t>
<t tx="ekr.20041119034357.16"></t>
<t tx="ekr.20041119034357.17"></t>
<t tx="ekr.20041119034357.18">Limit directory searches to files with the given file extension.

None  Compares all files when comparing directories.
.py   Compares only .py files when comparing directories.</t>
<t tx="ekr.20041119034357.19">These options have no effect when comparing directories.</t>
<t tx="ekr.20041119034357.20"></t>
<t tx="ekr.20041119034357.28">@nocolor</t>
<t tx="ekr.20041119034357.29">DEPRECATED

The default directory used if no directory specified in @path, @root or @file directives.

</t>
<t tx="ekr.20041119034357.30">The default language if no @language or @comment is in effect.

Valid values are (case is ignored):

actionscript,c,csharp,css,cweb,elisp,html,java,latex,
pascal,perl,perlpod,php,plain,plsql,python,rapidq,rebol,shell,tcltk.</t>
<t tx="ekr.20041119034357.31">The width of tabs on the screen.  This setting is also used when writing doc parts.

Valid values: Any nonzero integer.

Negative tab widths (recommended) cause Leo to convert tabs to blanks when typing.</t>
<t tx="ekr.20041119034357.32">The page width for wrapping doc parts in derived files.

Valid values: any nonzero positive integer.</t>
<t tx="ekr.20041119034357.33">True: Explicit Tangle commands output doc parts.</t>
<t tx="ekr.20041119034357.34">True: Explicit Tangle commands output file header.</t>
<t tx="ekr.20041119034357.35">True: Run tangle_done.py after explicit Tangle commands.</t>
<t tx="ekr.20041119034357.36">True: Run tangle_done.py after explicit Untangle commands.</t>
<t tx="ekr.20041119034357.38"></t>
<t tx="ekr.20041119034357.39">True: Wrap body text.

</t>
<t tx="ekr.20041119034357.40">

Foreground color for the cursor in body text.

</t>
<t tx="ekr.20041119034357.41">Background color for the cursor in body text.

</t>
<t tx="ekr.20041119034357.42">The format string used when creating the Time/Date string for the Insert Time/Date command.
See the Python documentation for time.strftime for full details.

Examples:

1/30/2003 8:31:55
%m/%d/%y %H:%M:%S

Thu, 30 Jan 2003 16:57:12
%a, %d %b %Y %H:%M:%S</t>
<t tx="ekr.20041119034357.43">True:  use gmt time.
False: use local time.

</t>
<t tx="ekr.20041119034357.44">True:  auto-indent aligns with open ({[ brackets

False: auto-indent increases indentation by one tab for Python only.</t>
<t tx="ekr.20041119034357.45">body_text_font_family = None
body_text_font_size = None
body_text_font_slant = None
body_text_font_weight = None
</t>
<t tx="ekr.20041119034357.48">Foreground colors of body text.</t>
<t tx="ekr.20041119034357.49">Background color of body text.

#ffecea</t>
<t tx="ekr.20041119034357.50">Color of insertion cursor

</t>
<t tx="ekr.20041119034357.53">Additional border in body text pane, in pixels.</t>
<t tx="ekr.20041119034357.54"></t>
<t tx="ekr.20041119034357.56">These options apply only to windows opened with the New command.</t>
<t tx="ekr.20041119034357.57">The ratio of tree pane size to body pane size when splitting primary panes horizontally.

Valid values: 0.0 to 1.0.

**Important**: Leo **does** save this ratio when saving a .leo file, so Leo
always uses this ratio only when creating a new outline.</t>
<t tx="ekr.20041119034357.58">The ratio of outline (tree) pane size to log pane size when splitting the primary panes horizontally.

Valid values: 0.0 to 1.0.

**Important**: Leo does not save this ratio when saving a .leo file, so Leo
always uses this ratio when opening a file that is being split horizontally.</t>
<t tx="ekr.20041119034357.59">Defines the primary splitter orientation.

The primary panes are the body pane and the secondary pane.
The secondary pane contains the outline and log panes.

vertical: body pane below outline and log panes.
horizontal: body pane to left of outline and log panes.

The so-called 'primary' ratio is the ratio between the body pane and the pane
containing the other two panes. The so-called secondary ratio is the ratio
between sizes of the log pane and the outline pane.

The thing to keep in mind is that Leo saves *only* the primary ratio in .leo
files. Leo does not save the so-called 'secondary' ratio in .leo files, because
doing so would change Leo's file format.

Because Leo **does** save the primary ratio in .leo files, Leo will open a file
with the same primary ratio that you had when you last saved the file.

Because Leo does **not** save the secondary ratio in the .leo file Leo
determines the relative sizes of the log and outline panes from settings in
leoSettings.leo. One of the two settings is used:

- initial_horizontal_secondary_ratio or

- initial_vertical_secondary_ratio

Which one is used depends on the initial_splitter_orientation setting.

**Important** If you change these settings you must restart Leo for them to take effect.

Here are some further notes adapted from comments from Paul Paterson:

Leo also doesn't save the split direction. This can be confusing, because if you
save a horizontal split file but your default split is vertical, then when you
reload and correct the split Leo has forgotten the ratio!  To restate:

- if you change the split direction (window .. toggle split) Leo resets the
split ratios.

- if you save a Leo file with a split other than the default (in settings) Leo
won't remember that.
</t>
<t tx="ekr.20041119034357.60">The ratio of tree pane size to body pane size when splitting primary panes vertically.

Valid values: 0.0 to 1.0.

**Important**: Leo **does** save this ratio when saving a .leo file, so Leo
always uses this ratio only when creating a new outline.</t>
<t tx="ekr.20041119034357.61">The ratio of outline (tree) pane size to body pane size when splitting the primary panes vertically.

Valid values: 0.0 to 1.0.

**Important**: Leo does not save this ratio when saving a .leo file, so Leo
always uses this ratio when opening a file that is being split vertically.</t>
<t tx="ekr.20041119034357.62">Height of window in pixels.
    
</t>
<t tx="ekr.20041119034357.63">Distance from left of screen of window, in pixels.

</t>
<t tx="ekr.20041119034357.64">Distance from top of screen of window, in pixels.</t>
<t tx="ekr.20041119034357.65">Width window in pixels.

</t>
<t tx="ekr.20041119034357.67">The color of the split bar. gray90 also looks good.</t>
<t tx="ekr.20041119034357.68">The Tk -relief option for the split bar.</t>
<t tx="ekr.20041119034357.69">The width of the split bar, in pixels (must be an integer).</t>
<t tx="ekr.20041119034357.70">Syntax colors may be any valid Tk color name or color value.

For example, "00aa00" is the dark green used by IDLE.

See http://www.tcl.tk/man/tcl8.3/TkCmd/colors.htm for a list of valid color
names. These names are case sensitive, for example: BlanchedAlmond.</t>
<t tx="ekr.20041119034357.72">True:  Leo colors @space, @* and @** sections in cweb mode as black with LaTeX keywords highlighted.
False: Leo colors @space, @* and @** sections in cweb mode as comments (default is red).

Note: this setting does not affect how Leo colors noweb section references and defintions.</t>
<t tx="ekr.20041119034357.73">True:  Leo colors C language comments in cweb mode as black with LaTeX keywords highlighted.
Flase: Leo colors C language comments in cweb mode as comments (default red).

Note: this setting does not affect how Leo colors noweb section references and defintions.</t>
<t tx="ekr.20041119034357.74">True:  Leo colors @directives when @language plain is in effect.
False: Leo colors everything black when @language plain is in effect.</t>
<t tx="ekr.20041119034357.75">True: Underline undefined section names

Only functional if use_hyperlinks = 0

</t>
<t tx="ekr.20041119034357.76">True:  underline "live" links.
False: (recommended): Underline undefined section names.</t>
<t tx="ekr.20041119034357.78">The color of comments in code parts.</t>
<t tx="ekr.20041119034357.79">The color of name in @&lt;name@&gt;</t>
<t tx="ekr.20041119034357.80">The color of C/C++ preprocessor directive lines.</t>
<t tx="ekr.20041119034357.81">The color of text in doc parts.</t>
<t tx="ekr.20041119034357.82">The color of keywords of the present language.

For example, the color of "if", "try" and "except" in Python.</t>
<t tx="ekr.20041119034357.83">The color of Leo keywords such as @ignore, @color, etc.</t>
<t tx="ekr.20041119034357.84">The color of name in &lt; &lt; name &gt; &gt; when name is defined.</t>
<t tx="ekr.20041119034357.85">The color of the double angle brackets in &lt;&lt; name &gt;&gt;

</t>
<t tx="ekr.20041119034357.86">The background color that represents spaces and tabs when Show Invisibles mode is in effect.</t>
<t tx="ekr.20041119034357.87">The foreground color that represents spaces and tabs when Show Invisibles mode is in effect.</t>
<t tx="ekr.20041119034357.88">The color of strings and their delimiters.

</t>
<t tx="ekr.20041119034357.89">The color of name in &lt;&lt; name &gt;&gt; when name is undefined.</t>
<t tx="ekr.20041119035137">@nocolor
@pagewidth 80

This is Leo's main settings file.  It specifies all the settings that Leo supports.

@settings trees are composed of various kinds of nodes. The _headline_ of each
node indicates its type. The body text of most nodes contain comments used by
the dialog creator. The body text of other nodes contain scripts. See the
children of this node for more details.

You can set settings by editing this file, by editing @settings trees in .leo files, and by using the Preferences command.</t>
<t tx="ekr.20041119035704">These nodes describe the type, name and value of a single setting.  Headlines have the form:

@type-name setting-name = value

The basic types are: @bool, @color, @directory, @encoding, @font, @int, @path, @shortcut, @string.  However, @type nodes can define other types.  The body text of basic nodes contains comments to be displayed in the settings dialog.

None is a valid value for all types.  It indicates that the setting node has no effect.

The dialog creator uses the type when creating the "picker" for the setting in the settings page.

N.B.  The dialog code will change the @settings tree when the user changes the setting in the dialog.

Some more work needs to be done with @font nodes because fonts are described (in Tk) as a tuple of four values.</t>
<t tx="ekr.20041119035704.1">Organizer nodes have headlines that do no start with @.

Organizer nodes may be inserted freely without changing the meaning of an @setting tree.</t>
<t tx="ekr.20041119035704.2">Leo ignores subtrees of @settings trees whose headline starts with @ignore.</t>
<t tx="ekr.20041119035704.3">Not implemented yet.

Creates a user-defined type. For example:

@type relief: string = [raised, sunken, flat, ridge, solid, groove]

This is much better than using a base type because the dialog creator can
present the user with a listbox containing only the valid options.</t>
<t tx="ekr.20041119035931">Acts like an organizer node if the expression evaluates to True, otherwise acts
like an @ignore node. If the expression is empty thebody text should contain a
script that will be evaluated (in an empty context).

This is a completely general method of creating different classes of settings.
For example, editing modes could be implemented this way.</t>
<t tx="ekr.20041119035931.1">Acts like an organizer node for the settings parser.

Tells the dialog creator to place all descendent nodes in a single page.  The page will be scrollable to accommodate arbitrarily many entries. </t>
<t tx="ekr.20041119041019">False: Print sends its output to stdout (console) when doing Execute Script command.
True:  Print redirected to Leo's log pane when doing Execute Script command.
</t>
<t tx="ekr.20041119041019.1">
The string to be appended to file names resulting from the Remove Sentinels command.
If the value starts with . the extension is appended to the original file name.
Otherwise, the extension is appended before the file extension.
Example 1:
  File name x.y
  remove_sentinels_extension = _ns
  Result: x_ns.y
Example 2:
  File name x.y
  remove_sentinels_extension = .txt
  Result: x.y.txt

</t>
<t tx="ekr.20041119041019.2">True:  The Save command clears undo buffer.
False: The undo buffer persists across saves.</t>
<t tx="ekr.20041119041304">This option applies to directories specified in filenames in all kinds of @file trees, and to filenames specified in the @path directive.

True:  Leo attempts to create directories if they do not exist.
False: Leo never attempts to create directories.</t>
<t tx="ekr.20041119041304.1">This option specifies the directory to be used as a prefix for &lt;filename&gt; in

@path &lt;filename&gt;
@file &lt;filename&gt;
@root &lt;filename&gt;

when &lt;filename&gt; is a relative path.

Valid values for this option:

'!' means relative to the location leo.py (recommended).
'.' means relative to the location of the .leo file in the top window.

An absolute path (in platform-dependent format).

Relative paths are not allowed because their meaning would depend on the changing value of the current working directory.</t>
<t tx="ekr.20041119041747">nl or lf: (recommended) All lines end with "\n"
cr:       All lines end with "\r"
crlf:     All lines end with "\r\n"
platform: Lines end in platform-specific way.

With platform Leo opens output files in "w" mode rather than "wb" mode and writes '\n'

Please specify nl when uploading files to Leo's CVS site.</t>
<t tx="ekr.20041119041747.1">The number of trailing newlines Leo retains at the end of each body text.

asis: Leo retains the number of newlines contained in each body text.
      
    Warning: Leo sometimes has problems determining which ending newlines are "real".

zero: Leo removes all trailing whitespace from body text.

one:  Leo ends each non-empty body text with exactly one trailing newline.</t>
<t tx="ekr.20041119041747.4">
True:  Leo strips blanks and tabs from otherwise blank lines.
False: Leo retains whitespace even in otherwise blank lines.</t>
<t tx="ekr.20041119042929"></t>
<t tx="ekr.20041119042929.1"></t>
<t tx="ekr.20041119042929.2">Same as @directory.</t>
<t tx="ekr.20041119042929.3"></t>
<t tx="ekr.20041119042929.4"></t>
<t tx="ekr.20041119042929.5"></t>
<t tx="ekr.20041119042929.6">Not supported at present.</t>
<t tx="ekr.20041119042929.7"></t>
<t tx="ekr.20041119042929.9">
The encoding used for derived files if no @encoding directive is in effect.
This setting is also used to encode files created by the Tangle commands.
Default is UTF-8 (case not important).

</t>
<t tx="ekr.20041119042929.10">The encoding specified in the following line of new .leo files:

&lt;?xml version="1.0" encoding="UTF-8"&gt;

The recommended value is UTF-8 (upper case for compatibility for old versions of Leo).

iso-8859-1 would be a popular alternative.

Important: Once a .leo file is created the &lt;?xml..."&gt; line can only be changed by hand.  Alas, changing the &lt;?xml..."&gt; line by hand may cause unicode errors the next time the .leo file is loaded.  Therefore, you should change the &lt;?xml..."&gt; line by hand only when first creating a .leo file.</t>
<t tx="ekr.20041119042929.11">The encoding that Tk text widgets are assumed for non-ascii character strings.

You would typically use this setting only in an emergency.

Leo assumes that Tk text widgets return:

1. The value specified by the tk_encoding parameter, if it exists.
2. locale.getdefaultlocale()[1] if it is exists.
3. sys.getdefaultencoding()</t>
<t tx="ekr.20041119043902">The path to the first file or directory to be compared.

Directory compares ignore a filename part of the path, if present.

E.g., c:/directory2/spam.py is valid for directory compares</t>
<t tx="ekr.20041119043902.1">The path to the second file or directory to be compared.

Directory compares ignore a filename part of the path, if present.

E.g., c:/directory2/spam.py is valid for directory compares</t>
<t tx="ekr.20041119043902.2">The path to the output file.

Leo will silently write to this file, regardless of whether it already exists, creating the file if needed.

Leo will write to the log pane if this path is empty or invalid.</t>
<t tx="ekr.20041119043902.3">True:  Append output to output file.

False: Replace output file with results of compare.</t>
<t tx="ekr.20041119043902.4">True: Ignore blanks lines when comparing files.

</t>
<t tx="ekr.20041119043902.5">True: Ignore the first line of compare_file_1 when comparing files.

</t>
<t tx="ekr.20041119043902.6">True: Ignore the first line of compare_file_2 when comparing files.</t>
<t tx="ekr.20041119043902.7">True: Ignore whitespace after the leading whitespace of a line when comparing files.</t>
<t tx="ekr.20041119043902.8">True:  Ignore leading whitespace of each line when comparing files.

False: The recommended setting when comparing Python source files.

</t>
<t tx="ekr.20041119043902.9">True: Ignore sentinel lines when comparing files.

Leo sets sentinel comment delimiters from the first line of each file.  This option has no effect if the first line is not a @+leo line.</t>
<t tx="ekr.20041119043902.10">0: Show lines regardless of the number of mismatches.

n: Stop showing lines after n mismatches.

</t>
<t tx="ekr.20041119043902.11">
1: Show blanks as [ ] and tabs as [t]

</t>
<t tx="ekr.20041119043902.12">True:  Print lines of both files when showing matching lines.

False: Print only the line of compare_file_1 when showing matching lines.

</t>
<t tx="ekr.20041119043902.13">True: Print lines that match using the print_both_lines_for_matches option.

</t>
<t tx="ekr.20041119043902.14">True: Print lines that do not compare equal to each other.

</t>
<t tx="ekr.20041119043902.15">True: Print lines all lines in one file after an end-of-file is seen on the other file.</t>
<t tx="ekr.20041119044139"></t>
<t tx="ekr.20041119050105">These options affecting how Leo shows the results of file compares.

Leo gathers statistics regardless of these options.</t>
<t tx="ekr.20041119050105.1">The change string (without the quotes unless quotes are part of the string).

N.B. Leo requires utf-8 encoding for any non-ascii characters.</t>
<t tx="ekr.20041119050105.2">The find string (without the quotes unless quotes are part of the string).

N.B. Leo requires utf-8 encoding for any non-ascii characters.

</t>
<t tx="ekr.20041119050105.3">These settings determine whether the corresponding checkbox is checked by default.</t>
<t tx="ekr.20041119050105.4">Despite its name, this setting affects the default value of the Show Context checkbox.</t>
<t tx="ekr.20041119050105.5">When checked, the Find and Change commands ignore the case of alphabetic characters when determining matches.
</t>
<t tx="ekr.20041119050105.6">When checked, the Change command marks all headlines whose headline or body text are changed by the command.
</t>
<t tx="ekr.20041119050105.7">When checked, the Find and Change commands mark all headlines in which a match is found with the pattern.
</t>
<t tx="ekr.20041119050105.8">When checked, the Find and Change commands treat several characters specially in
the find pattern. The '*' character matches any sequence of zero or more
characters. The '.' character matches any single character. The '^' character at
the start of a pattern, or a '$' character at the end of a pattern matches a
newline.

Examples:

The pattern "^abc$" matches lines that only contain "abc".
The pattern "^a" matches any line starting with "A".
The pattern "a$" matches any line ending with "a".
The pattern "^*$" matches any line at all.</t>
<t tx="ekr.20041119050105.9"></t>
<t tx="ekr.20041119050105.10"></t>
<t tx="ekr.20041119050105.11"></t>
<t tx="ekr.20041119050105.12"></t>
<t tx="ekr.20041119050105.13">Only one of these settings can be True.

If None are true, Leo searches the entire headline.</t>
<t tx="ekr.20041119050105.14">When checked, the Find and Change commands search body text.
</t>
<t tx="ekr.20041119050105.15">When checked, the Find and Change commands search headline text.
</t>
<t tx="ekr.20041119050105.16">When checked, the Find and Change commands search only the currently selected headline and its offspring.
</t>
<t tx="ekr.20041119050749.3">True:  Allows control-dragging to create clones.
False: All drags move nodes.

See also: look_for_control_drag_on_mouse_down
Setting this setting to False allows Leo to be used on Aqua.</t>
<t tx="ekr.20041119050749.4">True:  Tell whether drags will move nodes or clone nodes.
False: Don't issue such messages.

</t>
<t tx="ekr.20041119050749.5">
1: Click near a node expands or contracts the node.
0: Only clicks in a node's plus/minus box expands or contracts the node.

</t>
<t tx="ekr.20041119050749.6">Foreground color of unselected headline text.</t>
<t tx="ekr.20041119050749.7">Foreground color of selected headline text that is not being edited.

DodgerBlue4</t>
<t tx="ekr.20041119050749.8">Foreground color of unselected headline text in a headline that is being edited.

Background color must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119050749.9">Foreground color of selected text headline text in a headline that is being edited.

Background must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119050749.10">The format string used when creating the Time/Date string for the Insert Time/Date command.

See the Python documentation for time.strftime for full details.

Examples:
1/30
%m/%d

1/30/03 8:31:02
%m/%d/%y %H:%M:%S

Thu, 30 Jan 2003 16:57:12
%a, %d %b %Y %H:%M:%S
</t>
<t tx="ekr.20041119050749.11">True:  use gmt time when inserting time into headlines.

False: use local time.</t>
<t tx="ekr.20041119050749.12">Background color of outline pane itself.

LavenderBlush1
#ffffe1 # a little too yellow.
#ffffec
LightSteelBlue1 # Good for testing.</t>
<t tx="ekr.20041119050749.17">This option controls the interpretation of the control key when dragging nodes in the outline pane.

True: A drag is a control-drag if the control key is down at the start of the drag.

False: A drag is a control-drag if the control key is down at the end of the drag.</t>
<t tx="ekr.20041119050749.18">True: Use horizontal scrollbar in outline pane.</t>
<t tx="ekr.20041119051246.1"></t>
<t tx="ekr.20041119051246.2">Background color of unselected headline text.

LavenderBlush1</t>
<t tx="ekr.20041119051246.3">Background color of selected headline text that is not being edited.

LavenderBlush2</t>
<t tx="ekr.20041119051246.4">headline_text_font_family = None
headline_text_font_size = None
headline_text_font_slant = roman
headline_text_font_weight = normal
</t>
<t tx="ekr.20041119051901">Background color of unselected headline text in a headline that is being edited.

Foreground color must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119051901.1">Background color of selected text headline text in a headline that is being edited.

Foreground must also be specified for either setting to take effect.</t>
<t tx="ekr.20041119052015">Color for error messages written to the log window.</t>
<t tx="ekr.20041119052015.1">True: Wrap body text.

</t>
<t tx="ekr.20041119052015.2">Foreground color of log text.

</t>
<t tx="ekr.20041119053445">Background color of log text.</t>
<t tx="ekr.20041119105509">Not implemented yet.

Creates a permanent value that can be tested later with @if. That is, it alters
the environment in which @if code is executed.</t>
<t tx="ekr.20041119110141">Same as:

@if sys.platform == "platform-name":

except that it isn't necessary to import sys.

This would be the natural way to implement platform-dependent settings.</t>
<t tx="ekr.20041120152508"></t>
<t tx="ekr.20041120152657"></t>
<t tx="ekr.20041120152900"></t>
<t tx="ekr.20041120152900.1">Only one of these settings can be True.

If None are true, uses a 'Plain' search.</t>
<t tx="ekr.20041120152900.2">When the Script Search radio button is selected Leo treats the contents of the
Search Text as a script to execute whenever any kind of Find command is
executed. Similarly, when the Script Change checkbox is selected Leo treats the
context of the Change Text as a script to execute whenever any kind of Change
command is executed. See below for just how this works.

Script-based find-change is extremely powerful. In effect, Leo's Find/Change
panel becomes a new platform for running scripts interactively. Leo now has all
the find/change capability of pattern matching languages like Snobol and Icon,
just by using the capabilities of the plain Python language. Moreover, Leo can
deliver these capabilities interactively or not depending which buttons you push
in Leo's Find/Change panel.

Script-based find/change frees the user from having to control script-based
searches interactively. Rather than forcing find/change scripts to implement
their own interactive controls, it is much easier to use what Leo already has.

HOW IT WORKS

Leo dedicates a Python dictionary called app.searchDict for communication
between Leo and the search and change scripts. The search and change scripts may
also use app.searchDict for communication between themselves. Leo sets
app.searchDict["type"] to "find", "change", "findAll" or "changeAll" to indicate
the kind of command being executed. Scripts may use all other entries in
app.searchDict as they please.

Leo executes the find script once when you press the Find button (or the Change
then Find button) in Leo's Find/Change dialog. Typically, the find script would
traversing the tree and highlight the found text or otherwise indicate to the
user that the find operation has succeeded. However, the script can do anything
it pleases.

Leo executes the the find script repeatedly when you press the Find All button.
Leo keeps executing the find script until app.searchDict["continue"] evaluates
to false. Initially there is no entry for app.searchDict["continue"], so the
find script must set app.searchDict["continue"] = true if it wants Leo to keep
executing it.

Leo executes the change script once when you press the Change button. Typically,
the change script would change the selected text. Usually the change script will
compute the new value of body text and call v.setBodyStringOrPane(newText) to
make that change permanent. 

The change script also may handle undo, typically by calling
c.frame.onBodyChanged(v,"Change",oldText=oldText). Leo does not handle undo
automatically. Indeed, Leo makes no assumptions whatever about what the change
script really does.

Leo executes the the change script repeatedly when you press the Change All
button. Just as with the Find All command, Leo keeps executing the change script
until app.searchDict["continue"] evaluates to false.

Most find and change scripts will ignore settings in the Find Panel like "whole
word", "pattern match", and "reverse". However, these settings are available to
the scripts via ivars such as c.whole_word_flag, etc. if desired.

For examples, see the node called 'Script Find and Script Change' in leoDocs.leo.</t>
<t tx="ekr.20041120155431.1">The body text of @shortcut nodes contain the specification for zero or more shortcuts.

Lines starting with # are ignored.

All other non-blank lines should have the form:

commandName = shortcut specifier.</t>
<t tx="ekr.20041120155431.2">Not implemented yet.

Autments the settings parser and the dialog creator with scripts.</t>
<t tx="ekr.20041120175840">Same as

@if g.app.guiName == "gui-name":

This would be a natural way to implement gui-dependent settings.</t>
<t tx="ekr.20041120181045">A float value restricted to the range 0.0 to 1.0.</t>
<t tx="ekr.20041122163623">When looking at @x, Leo converts to lower case and removes minus signs.
Therefore, @if-platform and @ifPlatformare equivalent to @ifplatform.</t>
<t tx="ekr.20041213105007"></t>
<t tx="ekr.20041213105007.1"></t>
<t tx="ekr.20041213105007.2"></t>
<t tx="ekr.20041213105007.3"></t>
<t tx="ekr.20041213105508"># The font for the log pane. Default is default font for Tk.Text widgets.
# Tk translates invalid font names to another font in a system-dependent way.
# 
# Default size is 12 for Linux, 8 otherwise.

log_text_font_family = None
log_text_font_size = None
log_text_font_slant = roman
log_text_font_weight = normal
</t>
<t tx="ekr.20041213105954">Options that require pixel values can be any Python expression that yields an int.
Warning: the number of pixels per inch varies...</t>
<t tx="ekr.20041213105954.1"></t>
<t tx="ekr.20041213105954.2"></t>
<t tx="ekr.20041217184352.2">LightYellow1

#f2fdff</t>
<t tx="ekr.20050126083026">node granularity: start a new undo unit when typing moves to a new node.
line granularity: start a new undo unit when typing moves to new line.
word granularity: start a new undo unit when typing starts a new word.
char granularity: start a new undo unit for each character typed.

'line' granularity is the default used if no valid setting is specified.

Leo used char granularity for all version prior to 4.3. char granularity is not
recommended; it is clumsy and wasteful of computer memory.</t>
<t tx="ekr.20050203085250">This is not used in Leo, except in unit tests.

Please do not change this; it would make a unit test fail.</t>
<t tx="ekr.20050203090810">Please do not change any of these settings.

Doing so would make unit tests fail.
</t>
<t tx="ekr.20050620083647"></t>
<t tx="ekr.20050921105316.1">The Cmds menu is not ready yet.  It will be similar to the Emacs Cmds menu.</t>
<t tx="ekr.20050921105316.2">Important:

1. The minibuffer will exist regardless of this setting, but will not be shown
   initially if it is False.

2. Hiding the minibuffer does not change any bindings or the operation of Leo in
   any other way. Therefore, if you do hide the minibuffer initially, and never
   want to use it, you should not bind shortcuts to any commands that use the
   minibuffer.

3. You can execute the show-mini-buffer, hide-mini-buffer and toggle-mini-buffer
   commands (or any other minibuffer command!) if the minibuffer is hidden.
   Indeed, the following will work even if the minibuffer is hidden.

       &lt;alt-x&gt;show-mini-buffer&lt;return&gt;</t>
<t tx="ekr.20051006200015">Use a light selectbackground value so syntax coloring looks good.

Default is Gray80.
CadetBlue3 has been suggested.</t>
<t tx="ekr.20051006200015.1">Default is white.</t>
<t tx="ekr.20051007193321">@color

hide-mini-buffer        = None
show-mini-buffer        = None
toggle-mini-buffer      = Alt+Shift+S   # This had better be defined if you intend ever to hide the minibuffer.
    # Note: it **is** possible to use &lt;alt-x&gt;show-mini-buffer&lt;return&gt; even if the mini-buffer isn't visible!

# The infamous cut/copy/paste commands.
copy-text               = None      # Ctrl-C conflicts with quick-command.
cut-text                = None      # Ctrl-X (possible)
paste-text              = None      # Ctrl-V conflicts with scroll-down

# Leo find panel stuff.  It's not clear what will happen to these.
leo-find                = F3
leo-find-panel          = F5      # Ctrl-f conflicts with forward-char.
leo-find-previous       = F2
leo-change              = None
leo-change-then-find    = None
leo-change-all          = None      # Unwise to bind this to a shortcut or abbreviation.

# Controlling the keyboard controller.
full-command            = Alt-x
quick-command           = Ctrl-c
digit-argument          = None
number-command          = None
keyboard-quit           = Ctrl-g
universal-argument      = Ctrl-u
negative-argument       = Alt-minus
repeat-complex-command  = None

# Numbered commands...
number-command-0        = Alt-0
number-command-1        = Alt-1
number-command-2        = Alt-2
number-command-3        = Alt-3
number-command-4        = Alt-4
number-command-5        = Alt-5
number-command-6        = Alt-6
number-command-7        = Alt-7
number-command-8        = Alt-8
number-command-9        = Alt-9

# Moves...
back-sentence           = Alt-a
backward-char           = Control-b
backward-paragraph      = Alt-braceleft
backward-word           = Alt-b          
backward-word           = Control-Left
beginning-of-buffer     = Alt-less
beginning-of-line       = Alt-Up        
beginning-of-line       = Control-a
end-of-buffer           = Alt-greater
end-of-line             = Control-e
end-of-line             = Alt-Down      
exchange-point-mark     = None  # Should be Control-X Control-X.
forward-char            = Control-f
forward-paragraph       = Alt-braceright
forward-sentence        = Alt-e
forward-word            = Alt-f
forward-word            = Control-Right
goto-char               = None
goto-line               = Alt-g
help                    = None
move-past-close         = Alt-parenright
next-line               = Control-n
previous-line           = Control-p
scroll-down             = Control-v
scroll-up               = Alt-v
set-mark-command        = Control-Shift-at

# Inserts &amp; deletes...
delete                  = None              # What does this do?
delete-char             = Control-d
delete-file             = None
delete-rectangle        = None
delete-spaces           = Alt-backslash
insert-newline          = Control-o
newline-and-indent:     = Control-j
split-line              = Control-Alt-o
zap-to-character        = Alt-z

# Kill buffer...
# append-next-kill      = Control-Alt-w
backward-kill-paragraph = None
backward-kill-sentence  = None
backward-kill-word      = Alt-Delete
kill-buffer             = None
kill-line               = Control-k
kill-paragraph          = None
kill-rectangle          = None
kill-region             = Control-w
kill-region-save        = Alt-w
kill-sentence           = Alt-k
kill-word               = Alt-d
yank                    = Control-y
yank-pop                = Alt-y

# Processes...       
shell-command           = Alt-exclam
shell-command-on-regio  = Alt-bar
suspend                 = Control-z
save-buffers-kill-leo   = None # Should be Control-x Control-c

# Python evaluation...
escape                  = Escape
eval-expression         = Alt-colon

# Searches &amp; Query-replace...
isearch-forward         = Control-S
isearch-backward        = Control-R
isearch-forward-regexp  = Control-Alt-s
isearch-backward-regexp = Control-Alt-r
query-replace           = Alt-percent
query-replace-regex     = None
re-search-forward       = None
re-search-backward      = None
search-forward          = None
search-backward         = None
word-search-forward     = None
word-search-backward    = None

# All other editing commands...
abbrev-mode                 = None
add-global-abbrev           = None
advertised-undo             = Control-underscore
append-to-buffer            = None
append-to-register          = None
back-to-indentation         = Alt-m
backward-delete-char        = Delete
call-last-keyboard-macro    = None
capitalize-word             = Alt-c
center-line                 = Alt-s
center-region               = None
clear-rectangle             = None
close-rectangle             = None
copy-rectangle-to-register  = None
copy-to-buffer              = None
copy-to-register            = None
count-region                = Alt-equal
dabbrev-completion          = Control-Alt-slash
dabbrev-expands             = Alt-slash
delete-indentation          = Alt-asciicircum
diff                        = None
downcase-region             = None
downcase-word               = Alt-l
end-kbd-macro               = None
eval-expression:            = None
expand-abbrev               = None
expand-region-abbrevs       = None
fill-paragraph              = Alt-q
fill-region                 = None
fill-region-as-paragraph    = None
flush-lines                 = None
how-many                    = None
iconfify-or-deiconify-frame = None
increment-register          = None
# indent-for-tab            = Control-i
indent-region               = Alt-Control-backslash
indent-relative             = None
indent-rigidly              = None
indent-to-comment-column    = Alt-semicolon
insert-file                 = None
insert-keyboard-macro       = None
insert-parentheses          = Alt-parenleft
insert-register             = None
insert-to-buffer            = None
inverse-add-global-abbrev   = None
jump-to-register            = None
keep-lines                  = None
kill-all-abbrevs            = None
line-number                 = None
list-abbrevs                = None
list-buffers                = None
list-buffers-alphabetically = None
load-file                   = None
make-directory              = None
name-last-kbd-macro         = None
newline-and-indent          = None
number-to-register          = None
open-find-tab               = None
open-rectangle              = None
point-to-register           = None
prepend-to-buffer           = None
prepend-to-register         = None
print-bindings              = None
read-abbrev-file            = None
remove-blank-lines          = None
remove-directory            = None
rename-buffer               = None
replace-regex               = None
replace-string              = None
reverse-region              = None
# save-buffer               = None  # Use save instead.
select-all                  = None
select-paragraph            = Alt-h
set-comment-column          = None
set-fill-column             = None
set-fill-prefix             = None
shell-command-on-region     = None
show-colors                 = None
show-fonts                  = None
sort-columns                = None
sort-fields                 = None
sort-lines                  = None
start-kbd-macro             = None
string-rectangle            = None
switch-to-buffer            = None
tabify                      = None
transpose-chars             = Control-t
transpose-lines             = None
transpose-words             = Alt-t
untabify                    = None
upcase-region               = None
upcase-word                 = Alt-u
view-lossage                = None
view-register               = None
what-line                   = None
write-abbrev-file           = None
write-missing-at-file-nodes = None
yank-rectangle              = None

# Leo commands...

# apply settings             = None
abort-edit-headline          = Shift-Esc
about-leo                    = None
add-comments                 = Ctrl-(
cascade-windows              = None
check-all-python-code        = None
check-outline                = None
check-python-code            = None
# check-spelling             = Alt-Shift-A          # Add this command.
clear-recent-files           = None
clone-node                   = Ctrl-`
close-window                 = None
contract-all                 = None             # Alt-- conflicts with negative-arg.
contract-node                = Alt-[
contract-or-go-left          = Alt-LtArrow
contract-parent              = None
convert-all-blanks           = None
convert-all-tabs             = None
convert-blanks               = Shift-Ctrl-B
convert-tabs                 = Shift-Ctrl-J
copy-node                    = Shift-Ctrl-C
cut-node                     = Shift-Ctrl-X
de-hoist                     = None
delete-comments              = Ctrl-)
delete-node                  = Shift-Ctrl-BkSp
delete-text                  = None
demote                       = Ctrl-}
dump-outline                 = None
edit-headline                = Ctrl-H
end-edit-headline            = None             # Esc conflicts with watch-escape.
equal-sized-panes            = Alt-Shift-E
execute-script               = None             # Ctrl-e conflicts with end-of-line
exit-leo                     = Ctrl-Q
expand-all                   = None
expand-next-level            = None
expand-node                  = Alt-]
expand-or-go-right           = Alt-RtArrow
expand-prev-level            = None
expand-to-level-1            = None
expand-to-level-2            = None
expand-to-level-3            = None
expand-to-level-4            = None
expand-to-level-5            = None
expand-to-level-6            = None
expand-to-level-7            = None
expand-to-level-8            = None
expand-to-level-9            = None
export-headlines             = None
extract                      = Shift-Ctrl-D
extract-names                = Shift-Ctrl-N
extract-section              = Shift-Ctrl-E
find-next                    = F3
find-panel                   = F5           # Ctrl-f conflicts with forward-char
find-previous                = F2
flatten-outline              = None
go-back                      = None
go-forward                   = None
goto-first-node              = Alt-Shift-G
goto-last-node               = Alt-Shift-H
goto-last-visible            = None
goto-line                    = None         # Emacs version is less powerful than Leo version
goto-line-number             = Alt-G
goto-next-changed            = None         # Alt-D conflicts with kill-word
goto-next-clone              = None         # Removed Alt-N: not useful enough.
goto-next-marked             = None         # Alt-M conflicts with back-to-indentation.
goto-next-node               = Alt-Shift-DnArrow
goto-next-sibling            = Alt-Shift-S
goto-next-visible            = None         # Alt-DnArrow conflicts with end-of-line.
goto-parent                  = Alt-Shift-P
goto-prev-node               = Alt-Shift-UpArrow
goto-prev-sibling            = Alt-Shift-R
goto-prev-visible            = None         # Alt-UpArrow conflicts with beginning-of-line.
hoist                        = None
import-at-file               = None         # Removed Shift-Ctrl-F: not useful enough.
import-at-root               = None
import-cweb-files            = None
import-derived-file          = None
import-flattened-outline     = None
import-noweb-files           = None
indent                       = Ctrl-]
insert-body-time             = None         # Removed Shift-Ctrl-G: not useful enough.
insert-headline-time         = None         # Removed Shift-Ctrl-H: not useful enough.
insert-node                  = Ctrl-I
mark                         = Ctrl-M
mark-changed-items           = None         # Alt-C: now quick-command.
mark-changed-roots           = None         # Removed Alt-R: not useful enough.
mark-clones                  = None         # Alt-K conflicts with kill-sentence.
mark-subheads                = None         # Alt-S conflicts with center-line.
match-bracket                = None         # Ctrl-K conflicts with kill-line.
minimize-all                 = None
move-outline-down            = None         # Removed Ctrl-D: no point if other moves are not defined.
move-outline-left            = None         # Removed Ctrl-L: no point if other moves are not defined.
move-outline-right           = None         # Ctrl-R conflicts with search-backward.
move-outline-up              = None         # Ctrl-U confllicts with universal-argument.
new                          = None         # Ctrl-n conflicts with next-line.
open-compare-window          = None
open-leoconfig-leo           = None
open-leodocs-leo             = None
open-leoplugins-leo          = None
open-offline-tutorial        = None
open-online-home             = None
open-online-tutorial         = None
open-outline                 = None         # Ctrl-O conflicts with insert-newline
open-python-window           = None         # Removed Alt-P: not useful enough.
open-with                    = None
outline-to-CWEB              = None
outline-to-noweb             = None
paste-node                   = Shift-Ctrl-V
paste-retaining-clones       = None
pretty-print-all-python-code = None
pretty-print-python-code     = None
promote                      = Ctrl-{            
read-at-file-nodes           = None
read-outline-only            = None         # Removed Shift-Ctrl-R: not useful enough.
redo                         = None         # Ctrl-Z not defined, so Shift-Ctrl-Z less useful.
reformat-paragraph           = Shift-Ctrl-P
remove-sentinels             = None
replace                      = Ctrl-=
replace-then-find            = Ctrl--
resize-to-screen             = None
revert                       = None
save-file                    = None         # Ctrl-s conflicts with isearch-forward.
save-file-as                 = Shift-Ctrl-S
save-file-to                 = None
select-all                   = None         # Ctrl-A conflicts with beginning-of-line.
set-colors                   = None
set-font                     = None
settings                     = None         # Ctrl-Y conflicts with yank.
show-invisibles              = Alt-V
show-invisibles              = None         # Alt-V conflicts with scroll-up .
sort-children                = None
sort-siblings                = Shift-Alt-A  # Alt-A conflicts with back-sentence.
tangle                       = None         # Removed Shift-Ctrl-T: not useful enough.
tangle-all                   = None         # Removed Shift-Ctrl-A: not useful enough.
tangle-marked                = None         # Removed Shift-Ctrl-M: not useful enough.
toggle-active-pane           = None         # Ctrl-T conflicts with swap-characters.
toggle-angle-brackets        = None
toggle-split-direction       = None
undo                         = None         # Ctrl-Z conflicts with suspend.
unindent                     = Ctrl-[
unmark-all                   = None         # Alt-U: conflicts with upcase-word.
untangle                     = None         # Removed Shift-Ctrl-U: not useful enough
untangle-all                 = None
untangle-marked              = None
weave                        = None
write-at-file-nodes          = Shift-Ctrl-W
write-dirty-at-file-nodes    = None
write-outline-only           = None </t>
<t tx="ekr.20051007200824"></t>
<t tx="ekr.20051007200824.1">The following special single characters may be used in the tails of shortcuts.
They are listed along with their associated Tk binding value. Leo contains
special code to handle these characters. No other single characters may be
specified.

For example, you could specify Ctrl+! as a shortcut, and Leo will create a
binding for &lt;Control+exclam&gt;. Some of these values may be invalid on some
machines.

! exclam
" quotedbl
# numbersign
$ dollar
% percent
&amp; ampersand
' quoteright
( parenleft
) parenright
* asterisk
+ plus
, comma
- minus
. period
/ slash
: colon
; semicolon
&lt; less
= equal
&gt; greater
? question
@ at
[ bracketleft
\ backslash
] bracketright
^ asciicircum
_ underscore
` quoteleft
{ braceleft
| bar
} braceright
~ asciitilde

Leo recognizes the following mult-character names, and translates the indicated
strings in the menu items:
    
"bksp"     : "BkSp"
"dnarrow"  : "DnArrow"
"ltarrow"  : "LtArrow"
"rtarrow"  : "RtArrow"
"uparrow"  : "UpArrow"
"pageup"   : "PgUp"),
"pagedn"   : "PgDn")

For example, "Ctrl-uparrow"  will appear as "Ctrl+UpArrow" in the menu.

Leo passes all other mult-character names verbatim to Tk, so on some platforms
you may be able to use any of the following. Most appear on the numeric keypad.
For example, the following may work on some systems:
    
"Ctrl+BackSpace"

Don't use these if you want to be sure that the binding work on all platforms.
The complete list of names may be found at:
http://tcl.activestate.com/man/tcl8.4/TkCmd/keysyms.htm.
    
F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,
BackSpace, Break, Clear, Delete, Escape, Linefeed, Return, Tab, 
Down, Left, Right, Up,
Begin, End, Home, Next, Prior,
Num_Lock, Pause, Scroll_Lock, Sys_Req,
KP_Add, KP_Decimal, KP_Divide, KP_Enter, KP_Equal,
KP_Multiply, KP_Separator, KP_Space, KP_Subtract, KP_Tab,
KP_F1, KP_F2, KP_F3, KP_F4,
KP_0, KP_1, KP_2, KP_3, KP_4, KP_5, KP_6, KP_7, KP_8, KP_9</t>
<t tx="ekr.20051010093913">c.save()</t>
<t tx="ekr.20051010112558">@color

# Important: the print-commands and print-bindings show what bindings are in effect.

# Test of old-style bindings.
# selectall = Alt-Shift-Ctrl-A

abbrev-mode                 = None
abort-edit-headline         ! tree = Esc
about-leo                   = None
add-comments                = Ctrl-(
add-global-abbrev           = None
advertised-undo             = None
append-next-kill            = None      # Control-Alt-w
# apply settings            = None      # Does not exist yet.
append-to-buffer            = None
append-to-register          = None
auto-complete               = Ctrl-Tab
# back-char                     ! text = Ctrl-b # No conflict
back-char                       ! text = LtArrow
back-char-extend-selection      ! text = Shift-LtArrow
back-paragraph                  ! text = Alt-braceleft 
back-paragraph-extend-selection ! text = Alt-Shift-braceleft
back-sentence                   ! text = Alt-a  # No conflict
back-sentence-extend-selection  = None
back-to-indentation             = None
back-word                       ! text = Alt-b  # No conflict   
back-word-extend-selection      ! text = Alt-Shift-b  # No conflict
backward-delete-char        = BackSpace
backward-kill-paragraph     = None
backward-kill-sentence      = None
backward-kill-word          = Alt-Delete
beginning-of-buffer                     ! text = Alt-less # Note: same as Alt-Shift-less
beginning-of-buffer-extend-selection    = None
beginning-of-line                       ! text = Ctrl-a         # Ctrl-a Conflicts with select-all 
beginning-of-line-extend-selection      = None  # Ctrl-Shift-a conflicts with select-all 
call-last-keyboard-macro    = None
capitalize-word             = None
cascade-windows             = None
center-line                 = None
center-region               = None
check-all-python-code       = None
check-outline               = None
check-python-code           = None
clear-extend-mode           = None
clear-kill-ring             = None
clear-recent-files          = None
clear-rectangle             = None
clone-node                  = Ctrl-`
close                       = None      # Ctrl-w conflicts with kill-region.
close-find-dialog           = None
close-rectangle             = None
close-window                = None
contract-all                = Alt--
contract-node               = Alt-[
contract-or-go-left         = None
# contract-parent             ! tree = LtArrow # Was Alt-0, but this seems more consistent.
contract-parent             = None
convert-all-blanks          = None
convert-all-tabs            = None
convert-blanks              = Shift-Ctrl-B
convert-tabs                = Shift-Ctrl-J
copy-node                   = Shift-Ctrl-C
copy-rectangle-to-register  = None
copy-text                   = Ctrl-c        # Conflicts with Emacs ctrl-c
copy-to-buffer              = None
copy-to-register            = None
count-region                = None
cut-node                    = Shift-Ctrl-X
cut-text                    = Ctrl-x
cycle-focus                 = Alt-Shift-f
dabbrev-completion          = None
dabbrev-expands             = None
de-hoist                    = None
delete-char                 = Delete
delete-comments             = Ctrl-)
delete-file                 = None
delete-indentation          = None
delete-node                 = Shift-Ctrl-BkSp
delete-rectangle            = None
delete-spaces               = Alt-backslash
demote                      = Ctrl-}
diff                        = None
digit-argument              = None
downcase-region             = None
downcase-word               = None
dump-outline                = None
edit-headline               = Ctrl-H
end-edit-headline           ! tree = Return # Esc is also possible.
end-kbd-macro               = None
end-of-buffer                   ! text = Alt-greater # Note: same as Alt-Shift-greater
end-of-buffer-extend-selection  ! None
end-of-line                     ! text = Ctrl-e             # Ctrl-e conflicts with execute-script
end-of-line-extend-selection    ! text = Ctrl-Shift-e       # Ctrl-Shift-e conflicts with extract-section-names.
equal-sized-panes           = Alt-Shift-E
escape                      = None
eval-expression             = None
exchange-point-mark         = None      # Should be Ctrl-X Ctrl-X.
execute-script              = None      # Ctrl-e conflicts with end-of-line
exit-leo                    = Ctrl-Q
expand-abbrev               = None
expand-all                  = None      # Alt-9: not useful enough.
# expand-and-go-right         ! tree = RtArrow # It would make sense to bind Alt-RtArrow to this too.
expand-and-go-right         = None
expand-next-level           = Alt-=
expand-node                 = Alt-]
expand-or-go-right          = None
expand-prev-level           = Alt-.
expand-region-abbrevs       = None
expand-to-level-1           = None      # Was Alt-1 through Alt-8...
expand-to-level-2           = None
expand-to-level-3           = None
expand-to-level-4           = None
expand-to-level-5           = None
expand-to-level-6           = None
expand-to-level-7           = None
expand-to-level-8           = None
expand-to-level-9           = None
export-headlines            = None
extract                     = Shift-Ctrl-d
extract-names               = Shift-Ctrl-n
extract-section             = Shift-Ctrl-e
fill-paragraph              = None
fill-region                 = None
fill-region-as-paragraph    = None
find-dialog-change          = None  # Deprecated. 
find-dialog-change-all      = None  # Deprecated. 
find-dialog-change-then-find= None  # Deprecated. 
find-dialog-find-previous   = None  # Deprecated. 
find-dialog-find-next       = None  # Deprecated. 
find-tab-change             = Ctrl-=
find-tab-change-all         = None  # Not recommended to bind this to a shortcut.
find-tab-change-then-find   = Ctrl--
find-tab-find               = F3
find-tab-find-prev          = F2
flatten-outline             = None
flush-lines                 = None
focus-to-body               = None
focus-to-log                = None
focus-to-minibuffer         = None
focus-to-tree               = None
# forward-char                      ! text = Shift-Ctrl-f   # Ctrl-f Conflicts with find-panel
forward-char                        ! text = RtArrow
forward-char-extend-selection       ! text = Shift-RtArrow
forward-paragraph                   ! text = Alt-braceright
forward-paragraph-extend-selection  ! text = Alt-Shift-braceright
forward-sentence                    ! text = Alt-e          # No conflict
forward-sentence-extend-selection   ! text = Alt-Shift-e
forward-word                        ! text = Alt-f          # No conflict with bindings, but usually opens file menu.
forward-word-extend-selection       ! text = Alt-Shift-f
full-command                = Alt-x                 # No conflict.
go-back                     ! tree = None
go-forward                  ! tree = None
goto-char                   = None
goto-first-node             ! tree = Alt-Home       # Was: Alt-Shift-G
goto-first-sibling          ! tree = Alt-Shift-Home
goto-last-node              ! tree = None           # Was: Alt-Shift-H
goto-last-sibling           ! tree = Alt-Shift-End
goto-last-visible           ! tree = Alt-End
goto-line                   = None              # Usually Alt-g, but Leo's goto-line-number is better.
goto-line-number            = Alt-g             # The Leo equivalent.
goto-next-changed           ! tree = None       # Removed Alt-D: not useful enough.
goto-next-clone             ! tree = Alt-N
goto-next-marked            ! tree = None       # Removed Alt-M: not useful enough.
goto-next-node              ! tree = Alt-DnArrow
goto-next-sibling           ! tree = None
goto-next-visible           ! tree = DnArrow    # Alt-UpArrow conflicts with beginning-of-line.
goto-parent                 ! tree = Alt-LtArrow
goto-prev-node              ! tree = Alt-UpArrow
goto-prev-sibling           ! tree = None       # Removed Alt-Shift-R: not useful enough.
goto-prev-visible           ! tree = UpArrow
help                        = None          # Ctrl-h conflicts with edit headline.
hide-find-tab               = None
hide-mini-buffer            = None
hide-spell-tab              = None
hoist                       = None
how-many                    = None
iconify-frame               = None      # Same as suspend.
import-at-file              = None      # Removed Shift-Ctrl-F: not useful enough.
import-at-root              = None
import-cweb-files           = None
import-derived-file         = None
import-flattened-outline    = None
import-noweb-files          = None
increment-register          = None
indent-region               = Ctrl-]
indent-relative             = None
indent-rigidly              = None
indent-to-comment-column    = None
insert-body-time            = None      # Shift-Ctrl-G: not useful enough.
insert-file                 = None
insert-headline-time        = None      # Shift-Ctrl-H: not useful enough.
insert-keyboard-macro       = None
insert-newline              = None      # Ctrl-o conflicts with open.
insert-node                 = Ctrl-I
insert-parentheses          = None
insert-register             = None
insert-to-buffer            = None
inverse-add-global-abbrev   = None
isearch-backward            = None
isearch-backward-regexp     = None
isearch-forward             = None
isearch-forward-regexp      = None
jump-to-register            = None
keep-lines                  = None
keyboard-quit               = Ctrl-g    # Emacs binding.
kill-all-abbrevs            = None
kill-buffer                 = None
kill-line                   ! text = Shift-Ctrl-k  # Ctrl-K conflicts with match-braket.
kill-paragraph              = None
kill-rectangle              = None
kill-region                 = Control-w
kill-region-save            = Alt-w 	   # Ctrl-w conflicts with close.
kill-sentence               = Alt-k
kill-word                   = Alt-d
line-number                 = None
list-abbrevs                = None
list-buffers                = None
list-buffers-alphabetically = None
load-file                   = None
make-directory              = None
mark                        = Ctrl-M
mark-changed-items          = None      # Alt-C: now quick-command.
mark-changed-roots          = None      # Alt-R: not useful enough.
mark-clones                 = None      # Alt-K: not useful enough.
mark-subheads               = None      # Alt-S: not useful enough.
match-bracket               = Ctrl-K    # Conflicts with kill-line
minimize-all                = None
move-outline-down           = Ctrl-D
move-outline-left           = Ctrl-L
move-outline-right          = Ctrl-R
move-outline-up             = Ctrl-U
move-past-close                     = Alt-parenright # Same as Alt-shift-parenright
move-past-close-extend-selection    = None
name-last-kbd-macro         = None
negative-argument           = None      # Alt-minus conflicts with contract-all.
new                         = Ctrl-n    # Ctrl-n conflicts with next-line.
newline-and-indent:         = Control-j
next-line                   ! text = DnArrow
next-line-extend-selection  ! text = Shift-DnArrow
number-command              = None
number-command-0            = None
number-command-1            = None
number-command-2            = None
number-command-3            = None
number-command-4            = None
number-command-5            = None
number-command-6            = None
number-command-7            = None
number-command-8            = None
number-command-9            = None
number-to-register          = None
open-compare-window         = None
open-find-dialog            = None  # Deprecated. The find tab is much better.
open-find-tab               = Ctrl-f
open-leoconfig-leo          = None
open-leodocs-leo            = None
open-leoplugins-leo         = None
open-offline-tutorial       = None
open-online-home            = None
open-online-tutorial        = None
open-outline                = Ctrl-O    # Ctrl-O conflicts with insert-newline
open-python-window          = None      # Alt-P: not useful enough.
open-rectangle              = None
open-spell-tab              = None
open-with                   = None
outline-to-CWEB             = None
outline-to-noweb            = None
paste-node                  = Shift-Ctrl-V
paste-retaining-clones      = None
paste-text                  = Ctrl-v    # For testing only: Alt-Shift-Ctrl-v
point-to-register           = None
prepend-to-buffer           = None
prepend-to-register         = None
pretty-print-all-python-code= None
pretty-print-python-code    = None
previous-line                   ! text = Uparrow
previous-line-extend-selection  ! text = Shift-UpArrow
print-bindings              = None
print-commands              = None
promote                     = Ctrl-{            
query-replace               = None
query-replace-regex         = None
quick-command               = Alt-c     # Usually Ctrl-c, conflicts with cut-text.
re-search-backward          = None
re-search-forward           = None
read-abbrev-file            = None
read-at-file-nodes          = None
read-outline-only           = None      # Shift-Ctrl-R: not useful enough.
redo                        = Shift-Ctrl-Z
reformat-paragraph          = Shift-Ctrl-P
remove-blank-lines          = None
remove-directory            = None
remove-sentinels            = None
rename-buffer               = None
repeat-complex-command      = None      # Usually 'again', whatever that is.
replace                     = None
replace-regex               = None
replace-string              = None
replace-then-find           = None
resize-to-screen            = None
reverse-region              = None
revert                      = None
save-buffers-kill-leo       = None
save-file                   = Ctrl-s    # Ctrl-s conflicts with search.
save-file-as                = Shift-Ctrl-S
save-file-to                = None
scroll-down                 = PageDn    # Ctrl-v conflicts with paste-text.
scroll-up                   = PageUp    # Alt-v conflicts with view-all-characters.
search-backward             = None
search-forward              = None
select-all                  = Shift-Ctrl-A # Ctrl-Shift-a conflicts with beginning-of-line-extend-selection.
select-paragraph            = None
self-insert-command         = None      # The default binding for all visible keys.
set-colors                  = None
set-comment-column          = None
set-extend-mode             = None
set-fill-column             = None
set-fill-prefix             = None
set-font                    = None
set-mark-command            = Ctrl-space    # Also Ctrl-Shift-at
settings                    = None          # Ctrl-Y conflicts with yank.
shell-command               = None
shell-command-on-region     = None
show-colors                 = None
show-fonts                  = None
show-invisibles             = Alt-Shift-v   # Alt-V conflicts with scroll-up .
show-mini-buffer            = None
sort-children               = None
sort-columns                = None
sort-fields                 = None
sort-lines                  = None
sort-siblings               = Alt-Shift-A   # Alt-A conflicts with back-sentence.
spell-change                = None
spell-change-then-find      = None
spell-find                  = None
spell-ignore                = None
split-line                  = Alt-Ctrl-o
start-kbd-macro             = None
string-rectangle            = None
suspend                     = None
switch-to-buffer            = None
tabify                      = None
tangle                      = None      # Removed Shift-Ctrl-T: not useful enough.
tangle-all                  = None      # Removed Shift-Ctrl-A: not useful enough.
tangle-marked               = None      # Removed Shift-Ctrl-M: not useful enough.
toggle-active-pane          = Ctrl-T
toggle-angle-brackets       = None
toggle-extend-mode          = None
toggle-mini-buffer          = None
    # It **is** possible to use &lt;alt-x&gt;toggle-mini-buffer&lt;return&gt; even if the mini-buffer isn't visible!
    # This had better be defined if you intend ever to hide the minibuffer.
    # To avoid confusion, it should be something unlikely to be typed by accident.
toggle-split-direction      = None
transpose-chars             = None
transpose-lines             = None
transpose-words             = None
undo                        = Ctrl-Z
unindent                    = Ctrl-[
universal-argument          = Alt-u     # Usually Ctrl-u, conflicts with move-outline-up.
unmark-all                  = None
untabify                    = None
untangle                    = None      # Removed Shift-Ctrl-U: not useful enough
untangle-all                = None
untangle-marked             = None
upcase-region               = None
upcase-word                 = None
view-lossage                = None
view-register               = None
weave                       = None
what-line                   = None
word-search-backward        = None
word-search-forward         = None
write-abbrev-file           = None
write-at-file-nodes         = Shift-Ctrl-W
write-dirty-at-file-nodes   = None
write-missing-at-file-nodes = None
write-outline-only          = None 
yank                        = Control-y
yank-pop                    = Alt-y
yank-rectangle              = None
zap-to-character            = Alt-z
</t>
<t tx="ekr.20051010112903">Reserved  Alt-E  (Opens Edit Menu)
Reserved  Alt-F  (Opens File Menu)
Reserved  Alt-H  (Opens Help Menu)
Reserved  Alt-O  (Opens Outline Menu)
Reserved  Alt-W  (Opens Window Menu)

In Open With menu...
Idle      = Alt-Shift-I
Word      = Alt-Shift-W
WordPad   = Alt-Shift-T

Unused Ctrl-B, Ctrl-G, Ctrl-J, Ctrl-P
Unused Shift-Ctrl-I, Shift-Ctrl-K, Shift-Ctrl-L, Shift-Ctrl-O

F4 seems to interfere with Alt-F4 processing on windows.  Sigh.</t>
<t tx="ekr.20051011123608">n = len('insert-newline              ')

s = p.bodyString()
result = []
for line in g.splitLines(s):
    i = line.find('=')
    if i == -1 or i &lt;= n:
        result.append(line)
    else:
        result.append(line[:n] + line[i:])

result = ''.join(result)
# print result
p.setBodyString(result)</t>
<t tx="ekr.20051020125928">#d6c7d3
#d2cad0
#c6d3d7</t>
<t tx="ekr.20051022154824">True: (Recommended) Selecting an outline node leaves the focus in the outline pane.
      Essential when using key bindings that apply to the outline pane.

False: Selecting an outline node transfers focus to the body pane.
       This was the way all version before Leo 4.4 worked, but
       it will prevent key binding in the outline pane for outline operations from being useful.</t>
<t tx="ekr.20051025070845">#d6c7d3
#d2cad0
#c6d3d7
#ffffec # Same as outline.</t>
<t tx="ekr.20051025084017"></t>
<t tx="ekr.20051025084017.1"></t>
<t tx="ekr.20051025084017.2">The full path to the spelling dictionary.</t>
<t tx="ekr.20051025085144">@color

# The top-level aspell directory.

if sys.platform == 'darwin':
    aspell_dir = '/sw/lib'
else:
    aspell_dir = r'c:\Aspell'</t>
<t tx="ekr.20051025085144.1">@color

# The directory containing the executable

if sys.platform == 'darwin':
   
    aspell_bin_dir = '/sw/lib/bin'
        # NOT TESTED YET.
else:
    aspell_bin_dir = r'c:\Aspell\bin'
        # The directory continaing apell.pyd and aspell-15.dll</t>
<t tx="ekr.20051027175030">True: When typing an opening bracket '(','[' or '{', immediately type the
corresponding closing bracket.  To move past the closing bracket, just type it.</t>
<t tx="ekr.20051101160257">A shortcut specification has the form:
    
command-name = shortcutSpecifier

or

command-name ! pane = shortcutSpecifier

The first form creates a binding for all panes. The second form creates a
binding for one or more panes. The possible values for 'pane' are:

pane    bound panes
----    -----------
all     body,log,tree
body    body
log     log
mini    minibuffer
text    body,log
tree    tree
    
To remove any default shortcut, use None as the specifier. Otherwise, a shortcut
specifier consists of a head followed by a tail. The head may be empty, or may
be a concatenation of the following: Shift+, Alt+, Control+ or Ctrl+.

Case is ignored in command-name, and in the head of the shortcutSpecifier. Case
is significant in multi-character tails. Also, - may be used instead of + in
heads. The following are all equivalent:
    
    Ctrl+A
    Ctrl-a
    Control+A

The following are not equivalent:
    
    Ctrl+-
    Ctrl-+

and the following are not equivalent:

    Ctrl+Tab (may be valid)
    Ctrl+tab (will never be valid)
    
See "About shortcut specifiers" for a full discussion of what may appear in the tail of a shortcut.</t>
<t tx="ekr.20051123100536"></t>
<t tx="ekr.20051123100536.1">A common alternative is:

vim_cmd = c:\Program Files\vim\vim64\gvim --servername LEO
    _vim_exe = r"c:\Program Files\vim\vim64\gvim"</t>
<t tx="ekr.20051123100536.2"></t>
<t tx="ekr.20051123100536.3"></t>
<t tx="ekr.20051126062243"></t>
<t tx="ekr.20051126062243.1"></t>
<t tx="ekr.20051126062525"></t>
<t tx="ekr.20051126062830"></t>
<t tx="ekr.20051126063209"></t>
</tnodes>
</leo_file>
