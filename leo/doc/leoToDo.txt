#@+leo-ver=4-thin
#@+node:ekr.20040117181936:@thin ../doc/leoToDo.txt
#@+all
#@+node:ekr.20060206103355:To do 4.4b2
#@+node:ekr.20060122183914.1:Urgent commands for mouseless Leo (4)
@nocolor
#@nonl
#@+node:ekr.20060122193554:prev-line and next-line do not remember column properly
@nocolor

http://sourceforge.net/forum/message.php?msg_id=3549737

for extend selection,
with binding to arrow keys,
if you switch from up to dn arrow,
the selection restarts again.
this should just change extend direction
while still using the same selection.
#@nonl
#@-node:ekr.20060122193554:prev-line and next-line do not remember column properly
#@+node:ekr.20060116083359.1:expand-pane & contract-pane
#@-node:ekr.20060116083359.1:expand-pane & contract-pane
#@+node:ekr.20060116080040.2:activate-xxx-menu commands
These would be an alternative to XP Alt-f, Alt-E, etc.
#@-node:ekr.20060116080040.2:activate-xxx-menu commands
#@+node:ekr.20060206103531:(maybe) select-find-tab-find-text & select-find-tab-change-text
#@-node:ekr.20060206103531:(maybe) select-find-tab-find-text & select-find-tab-change-text
#@-node:ekr.20060122183914.1:Urgent commands for mouseless Leo (4)
#@+node:ekr.20060122183914:Fix minor bugs 10
#@+node:ekr.20060206131908:pasteText (with empty text?) crashed when pasting into minibuffer
#@-node:ekr.20060206131908:pasteText (with empty text?) crashed when pasting into minibuffer
#@+node:ekr.20060122185244.2:Fix unindent command
unindent-region should do nothing if not in body pane, or it should work in all panes.
#@nonl
#@-node:ekr.20060122185244.2:Fix unindent command
#@+node:ekr.20060206113925:Make sure yield works with Python 2.2
@nocolor
http://sourceforge.net/forum/message.php?msg_id=3549737
By: nobody

\src\leoEditCommands.py:340: 
Warning: 'yield' will become a reserved keyword 

for python2.2 leoEditCommands.py needs
from __future__ import generators
#@nonl
#@-node:ekr.20060206113925:Make sure yield works with Python 2.2
#@+node:ekr.20060206113925.1:Fix problem with body_gmt_time setting
@nocolor
http://sourceforge.net/forum/message.php?msg_id=3549737

Warning: ignoring bool:body_gmt_time not string
There may be conflicting settings!
#@nonl
#@-node:ekr.20060206113925.1:Fix problem with body_gmt_time setting
#@+node:ekr.20060121101642:Make sure save updates the open directory
@nocolor

http://sourceforge.net/forum/message.php?msg_id=3534349
By: edcdave

Thanks for the tip. I did some further checking along this vein and found that
saving the Leo file is not sufficient - I have to exit the document and open
it again before the rst destination directory is set correctly.

While I was testing this, I encountered a problem with the delete key. But I'll
post it in another thread.

Thanks again,
Dave Harris
#@-node:ekr.20060121101642:Make sure save updates the open directory
#@+node:ekr.20050707085637:Suggestions from an emacs user 3
@nocolor
http://sourceforge.net/forum/message.php?msg_id=3237845
By: eichin

Finally, one comment from the talk that bothered me for a while and didn't click
until later - "emacs doesn't really have an outline mode".  This is true, at
face value - outline mode in fact is just some regexp and hiding kludging, powerful
in it's own way but not "deep".  However, the operations felt familiar, and
it wasn't until I went home and checked mail that I caught it -- *GNUS* is actually
surprisingly close in function set to an outliner.  Not in any immediately useful
way, but it both clarifies why I think emacs could work this way *and* possibly
clarifies why gnus users are so engaged by the interface :-)  Though that does
mean gnus might be a reasonable source of suggestions for key bindings...
#@nonl
#@+node:ekr.20060116082302.1:Use os.getenv('User") if it exists to get initial cvs name
On startup, it asked me for a unique id, "possibly your CVS username".
As a non-windows-user, that made no sense at all to me - at very least, it should
fill in os.getenv("USER") as a default, because it's right on non-windows systems,
isn't it?  (If it isn't, there's no explanation at that point that would tell
me otherwise, that's the value I used anyway...)  Just an out-of-box-experience
issue.
#@nonl
#@-node:ekr.20060116082302.1:Use os.getenv('User") if it exists to get initial cvs name
#@+node:ekr.20060116083043:Two help menus on the Mac
More mac nits: two HELP menus, one is empty; 
#@nonl
#@-node:ekr.20060116083043:Two help menus on the Mac
#@+node:ekr.20060116083043.1:Add context-menus on nodes or text
#@-node:ekr.20060116083043.1:Add context-menus on nodes or text
#@-node:ekr.20050707085637:Suggestions from an emacs user 3
#@+node:ekr.20060114055611:Fix sort-lines problems
- It should recolor the text.
- Does it not stick sometimes?
#@nonl
#@-node:ekr.20060114055611:Fix sort-lines problems
#@+node:ekr.20060124082357:Fix problem with view plugin
@nocolor

http://sourceforge.net/forum/message.php?msg_id=3538274
By: ktenney

The plugin to support @view nodes is not working
for me, when I doubleclick an @view node, the 
cursor changes to an hourglass a couple times, but
nothing happens in the body of the node.

I imported at_view.py into a node, named it
@button at_view.py, and added the following;

v = View(c)
v.icondclick2(None,None)    

This works as a button; clicking the button
when an @view node is selected updates the
node body.

Evidently the issue is with the hooking/calling
mech. not the plugin code itself.
#@nonl
#@-node:ekr.20060124082357:Fix problem with view plugin
#@-node:ekr.20060122183914:Fix minor bugs 10
#@+node:ekr.20060206104510:Docs
Refer to 4.4b3 to do first list.
#@nonl
#@+node:ekr.20060206105450:Finish apropos-find-commands
#@-node:ekr.20060206105450:Finish apropos-find-commands
#@+node:ekr.20060124090925:Posting
Minibuffer search commands should be nothing a but a thin interface to Leo's already existing tab-search commands.  That is, the searchCommandsClass in leoEditCommands.py will be an adapter class on the leoFind class in leoFind.py.  It won't be a subclass: it will use the already existing class.

Notes:

- The leoFind class will remain essentially unchanged, except possibly for a few new interface methods.  This keeps the project safe.

- The searchCommandsClass can use Leo's complex logic for determining the next node in searches.  Except for incremental searches, the actual searching logic will be delegated to the leoFind class.  This avoids bugs in the search commands (except very old bugs :-)

- In no case will the new search commands make the Find tab visible; it's only the Find tab code that is being reused, not the Find tab interface.

- With perhaps a bit of fudging the find-tab-find command is essentially equivalent to what I was thinking of as the find-again command.  Similarly for find-tab-find-previous.  These aliases for existing commands will make it clear that the find tab does not need to be visible.

- The incremental search commands do not exists in the leoFind classes, so they will be implemented entirely in the searchCommandsClass.  The incremental commands should maintain a list of previous matches.  This allows a) support for backspace and b) an incremental-search-again command.  Furthermore, this list makes it easy to detect the end of a wrapped incremental search.

- Leo will have a set of minibuffer commands that toggle leoFind class ivars.  The searchCommandsClass will use these ivars to guide searches.  (Mostly this will happen automatically because all the real work gets delegated to the leoFind class.)

Presumably, few people will want to bind keys to these toggle-options commands. Rather, user would typically set find options in a mode.  There will be a new 'show-search-options' command that will print the options in the status line.  As a more visual alternative, I am planning new show-find-tab-options command that will show only the checkboxes in the find tab.  These checkboxes will always be up-to-date: that is, the toggle-options commands will update the gui (behind the scenes, unless the find tab is already visible.)

- A new default-search command will call one of the various new minibuffer search commands depending on the setting of these options.  This promises to be very useful.  The find-again command will support previous default and incremental searches, probably with some special-case code.
#@nonl
#@-node:ekr.20060124090925:Posting
#@+node:ekr.20051103091115.1:(done) Reorganize Find/Change settings
@nocolor
http://sourceforge.net/forum/message.php?msg_id=3411067
By: rogererens

Also, in the settings of Find/Change, I would choose for grouping the settings
node_only, search_body, search_headline, wrap (and possibly the whole_word option
also) together under search extent radio buttons. Although this organizational
mode mentions radio buttons, check boxes are used for selection_only and
suboutline_only, which I can enable both at the same time.
It's also not (yet?) very clear to me how selection_only, suboutline_only, node_only
(should) interact...
#@nonl
#@-node:ekr.20051103091115.1:(done) Reorganize Find/Change settings
#@+node:ekr.20060206104722:(done) Allow modes to inherit bindings

#@-node:ekr.20060206104722:(done) Allow modes to inherit bindings
#@-node:ekr.20060206104510:Docs
#@-node:ekr.20060206103355:To do 4.4b2
#@-all
#@nonl
#@-node:ekr.20040117181936:@thin ../doc/leoToDo.txt
#@-leo
